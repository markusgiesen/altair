// --------------------------------------------------------------------------
// Helpers and mixins
// --------------------------------------------------------------------------

// Add alphatransparency to any background or border color
// --------------------------------------------------------------------------

@mixin translucent-background($color: $white, $alpha: 1) {
	background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin translucent-border($color: $white, $alpha: 1) {
	border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
	background-clip: padding-box;
}

// Input placeholder text
// --------------------------------------------------------------------------
// Example:;
// @include input-placeholder {
//   color: #bfbfbf;
//   font-style: italic;
// }

@mixin input-placeholder {
	&:placeholder { @content; }
}

// Image 2x (HiDPI, Retina, Hi-res)
// --------------------------------------------------------------------------
// Specify a minimum Webkit device pixel ratio of 1.25 instead of 1.5, to serve
// 2x images to Android devices that are between 1 and 1.5x (like the Nexus 7).
// Firefox and Opera will respond to 1.5x on these devices, but Chrome will not.
// Specify min-resolution, which covers Firefox 19. Opera on Android also supports
// min-resolution, but Opera Mini does not support dppx, so the dpi unit is used.
//
// Link: http://j.mp/T9h80Z
//
// Usage:
//   .logo {
//     @include image-2x('logo-2x.png',100px,25px);
//     background: img-url('logo.png') no-repeat;
//   }

@mixin image-2x($image, $width, $height) {
	@media (-webkit-min-device-pixel-ratio: 1.25),
				(-o-min-device-pixel-ratio: 5/4),
						   (min-resolution: 120dpi) {
		background-image: img-url($image);
		background-size: $width $height;
	}
}

// Background clip for text
// --------------------------------------------------------------------------
// Based on Divya's pure CSS solution: http://j.mp/19BOwaF

@mixin clip-text($img-url, $fallback-color: $black) {
	color: $fallback-color;
	-webkit-text-fill-color: transparent;
	background: -webkit-linear-gradient(transparent, transparent), img-url($img-url) repeat;
	background: -o-linear-gradient(transparent, transparent);
	-webkit-background-clip: text;
}
