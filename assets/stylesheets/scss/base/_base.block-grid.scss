/* ==========================================================================
   Block grid
   ========================================================================== */

/**
 * Loosely based on:
 * - https://github.com/suitcss/grid/
 * - https://github.com/suitcss/grid-layouts/
 * - http://suitcss.github.io/grid-layouts/ <= EXAMPLE
 *
 * Browser support:
 * - Google Chrome (latest)
 * - Opera (latest)
 * - Firefox 4+
 * - Safari 5+
 * - Internet Explorer 9+
 *
 * DO NOT apply dimension or offset utilities to the `BlockGrid` element. All cell
 * widths and offsets should be applied to child grid cells.
 *
 * Example HTML:
 * <div class="BlockGrid BlockGrid--small1col BlockGrid--compact2col BlockGrid--medium4col">
 *     <div class="BlockGrid-cell BlockGrid-cell--1"></div>
 *     <div class="BlockGrid-cell BlockGrid-cell--2"></div>
 *     <div class="BlockGrid-cell BlockGrid-cell--3"></div>
 *     <div class="BlockGrid-cell BlockGrid-cell--4"></div>
 * </div>
 */

/**
 * BlockGrid container
 *
 * All content must be contained within child `BlockGrid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Ensure consistent default alignment.
 * 3. Remove inter-cell whitespace that appears between `inline-block` child
 *    elements.
 */

.BlockGrid {
	display: block; /* 1 */
	padding: 0; /* 1 */
	margin: 0; /* 1 */
	text-align: left; /* 2 */
	font-size: 0; /* 3 */
}

/**
 * Modifier: center align all grid cells
 */

.BlockGrid--alignCenter {
	text-align: center;
}

/**
 * Modifier: right align all grid cells
 */

.BlockGrid--alignRight {
	text-align: right;
}

/**
 * Modifier: middle-align grid cells
 */

.BlockGrid--alignMiddle > .BlockGrid-cell {
	vertical-align: middle;
}

/**
 * Modifier: bottom-align grid cells
 */

.BlockGrid--alignBottom > .BlockGrid-cell {
	vertical-align: bottom;
}

/**
 * BlockGrid cell
 *
 * No explicit width by default. Rely on combining `BlockGrid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Reset font size change made in `BlockGrid`.
 * 3. Keeps content correctly aligned with the grid direction.
 * 4. Controls vertical positioning of units.
 * 5. Make cells full-width by default.
 */

.BlockGrid-cell {
	display: inline-block; /* 1 */
	margin: 0;
	padding: 0;
	width: 100%; /* 5 */
	vertical-align: top; /* 4 */
	text-align: left; /* 3 */
	font-size: 1rem; /* 2 */
}

/**
 * Modifier: horizontally center one unit
 *
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `BlockGrid` object.
 */

.BlockGrid-cell--center {
	display: block;
	margin: 0 auto;
}

/**
 * BlockGrid gutter
 */

/* Em gutter */

.BlockGrid--withGutter {
	margin-right: rhythm(-.5); /* Removes the `gutter` right */
	margin-left: rhythm(-.5); /* Removes the `gutter` right */

	@if $oldie {
		margin-right: -.5 * $grid-gutter-percentage; /* Removes the `gutter` right */
		margin-left: -.5 * $grid-gutter-percentage; /* Removes the `gutter` right */
	}

	& > .BlockGrid-cell {
		padding-right: rhythm(.5);
		padding-left: rhythm(.5);

		@if $oldie {
			padding-right: .5 * $grid-gutter-percentage;
			padding-left: .5 * $grid-gutter-percentage;
		}
	}
}

/* Percentage gutter */

.BlockGrid--withGutterPercentage {
	margin-right: -.5 * $grid-gutter-percentage; /* Removes the `gutter` right */
	margin-left: -.5 * $grid-gutter-percentage; /* Removes the `gutter` right */

	& > .BlockGrid-cell {
		padding-right: .5 * $grid-gutter-percentage;
		padding-left: .5 * $grid-gutter-percentage;
	}
}


